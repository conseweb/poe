// Code generated by protoc-gen-go.
// source: poe.proto
// DO NOT EDIT!

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	poe.proto

It has these top-level messages:
	Document
	ProofStat
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DocProofStatus int32

const (
	DocProofStatus_NOT_SPECIFIAL   DocProofStatus = 0
	DocProofStatus_NOT_PROOFED     DocProofStatus = 1
	DocProofStatus_ALREADY_PROOFED DocProofStatus = 2
)

var DocProofStatus_name = map[int32]string{
	0: "NOT_SPECIFIAL",
	1: "NOT_PROOFED",
	2: "ALREADY_PROOFED",
}
var DocProofStatus_value = map[string]int32{
	"NOT_SPECIFIAL":   0,
	"NOT_PROOFED":     1,
	"ALREADY_PROOFED": 2,
}

func (x DocProofStatus) String() string {
	return proto.EnumName(DocProofStatus_name, int32(x))
}
func (DocProofStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// ProofObject
type Document struct {
	// unique id
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// raw data
	// bytes raw = 2;
	// hash(block)
	BlockDigest string `protobuf:"bytes,3,opt,name=blockDigest" json:"blockDigest,omitempty"`
	// submit time
	SubmitTime int64 `protobuf:"varint,4,opt,name=submitTime" json:"submitTime,omitempty"`
	// proof time
	ProofTime int64 `protobuf:"varint,5,opt,name=proofTime" json:"proofTime,omitempty"`
	// document hash
	Hash string `protobuf:"bytes,6,opt,name=hash" json:"hash,omitempty"`
	// wait time
	WaitDuration int64 `protobuf:"varint,7,opt,name=waitDuration" json:"waitDuration,omitempty"`
	// metadata
	Metadata string `protobuf:"bytes,8,opt,name=metadata" json:"metadata,omitempty"`
	// txid
	Txid string `protobuf:"bytes,9,opt,name=txid" json:"txid,omitempty"`
	// sign
	Sign string `protobuf:"bytes,10,opt,name=sign" json:"sign,omitempty"`
	// appName
	AppName string `protobuf:"bytes,11,opt,name=appName" json:"appName,omitempty"`
	// proofed flag
	ProofStatus DocProofStatus `protobuf:"varint,12,opt,name=proofStatus,enum=protos.DocProofStatus" json:"proofStatus,omitempty"`
}

func (m *Document) Reset()                    { *m = Document{} }
func (m *Document) String() string            { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()               {}
func (*Document) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// ProofStat
type ProofStat struct {
	StartTime   int64 `protobuf:"varint,1,opt,name=startTime" json:"startTime,omitempty"`
	EndTime     int64 `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
	TotalDocs   int64 `protobuf:"varint,3,opt,name=totalDocs" json:"totalDocs,omitempty"`
	WaitDocs    int64 `protobuf:"varint,4,opt,name=waitDocs" json:"waitDocs,omitempty"`
	ProofedDocs int64 `protobuf:"varint,5,opt,name=proofedDocs" json:"proofedDocs,omitempty"`
}

func (m *ProofStat) Reset()                    { *m = ProofStat{} }
func (m *ProofStat) String() string            { return proto.CompactTextString(m) }
func (*ProofStat) ProtoMessage()               {}
func (*ProofStat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*Document)(nil), "protos.Document")
	proto.RegisterType((*ProofStat)(nil), "protos.ProofStat")
	proto.RegisterEnum("protos.DocProofStatus", DocProofStatus_name, DocProofStatus_value)
}

func init() { proto.RegisterFile("poe.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x91, 0xcd, 0x4e, 0xc2, 0x40,
	0x10, 0xc7, 0x2d, 0x20, 0xd0, 0x29, 0x02, 0x16, 0x63, 0xf6, 0x68, 0x38, 0x19, 0x4d, 0x38, 0xe8,
	0x13, 0x10, 0x0b, 0x09, 0x09, 0xa1, 0x0d, 0x70, 0xf1, 0x64, 0xb6, 0x74, 0x85, 0x8d, 0xb4, 0xdb,
	0x74, 0xa7, 0xd1, 0xe7, 0xf5, 0x49, 0x9c, 0x4e, 0x05, 0xe3, 0xa9, 0x99, 0x5f, 0x67, 0xfe, 0x1f,
	0x59, 0x70, 0x73, 0xa3, 0x26, 0x79, 0x61, 0xd0, 0xf8, 0x6d, 0xfe, 0xd8, 0xf1, 0xb7, 0x03, 0xdd,
	0xc0, 0xec, 0xca, 0x54, 0x65, 0xe8, 0x03, 0x34, 0x74, 0x22, 0x9c, 0x3b, 0xe7, 0xde, 0xf5, 0x47,
	0xe0, 0xc5, 0x47, 0xb3, 0xfb, 0x08, 0xf4, 0x5e, 0x59, 0x14, 0x4d, 0x86, 0xb4, 0x61, 0xcb, 0x38,
	0xd5, 0xb8, 0xd5, 0xa9, 0x12, 0x2d, 0x62, 0x4d, 0xff, 0x9a, 0x64, 0x0b, 0x63, 0xde, 0x19, 0x5d,
	0x32, 0xea, 0x41, 0xeb, 0x20, 0xed, 0x41, 0xb4, 0xf9, 0xe8, 0x06, 0x7a, 0x9f, 0x52, 0x63, 0x50,
	0x16, 0x12, 0xb5, 0xc9, 0x44, 0x87, 0x77, 0x86, 0xd0, 0x4d, 0x15, 0xca, 0x44, 0xa2, 0x14, 0x5d,
	0xde, 0xa3, 0x2b, 0xfc, 0x22, 0x7f, 0xf7, 0x34, 0x59, 0xbd, 0xcf, 0x04, 0xf0, 0x34, 0x80, 0x8e,
	0xcc, 0xf3, 0x95, 0x24, 0x0b, 0x8f, 0xc1, 0x23, 0x78, 0xec, 0xba, 0x41, 0x89, 0xa5, 0x15, 0x3d,
	0x82, 0xfd, 0xa7, 0xdb, 0xba, 0x9c, 0x9d, 0x50, 0xa3, 0xe8, 0xef, 0xef, 0x58, 0x83, 0x7b, 0x1e,
	0xab, 0xbc, 0x16, 0x65, 0x51, 0x57, 0x70, 0x38, 0x0b, 0xa9, 0xab, 0x2c, 0x61, 0xd0, 0x38, 0x75,
	0x42, 0x83, 0xf2, 0x48, 0x3a, 0x96, 0xab, 0x73, 0x5e, 0x6e, 0x51, 0x91, 0xba, 0xf8, 0xe8, 0x37,
	0x82, 0x4a, 0x18, 0x72, 0xf5, 0x87, 0x05, 0xf4, 0xff, 0x9b, 0x93, 0xd6, 0xd5, 0x2a, 0xdc, 0xbe,
	0x6d, 0xa2, 0xd9, 0xcb, 0x62, 0xbe, 0x98, 0x2e, 0x87, 0x17, 0xe4, 0xe7, 0x55, 0x28, 0x5a, 0x87,
	0xe1, 0x7c, 0x16, 0x0c, 0x1d, 0x92, 0x1a, 0x4c, 0x97, 0xeb, 0xd9, 0x34, 0x78, 0x3d, 0xc3, 0x46,
	0x5c, 0x3f, 0xd1, 0xf3, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x94, 0x8f, 0xfd, 0xad, 0xb6, 0x01,
	0x00, 0x00,
}
